{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"mount_file_id":"1QaLqHZhBp85H4ckJazjxvn6jaa6Ghn0l","authorship_tag":"ABX9TyN/wHcF/UgafVhzHsjAi/re"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"KU9_JctIMZ6R"},"outputs":[],"source":["import numpy as np\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","from sklearn.model_selection import train_test_split\n","from sklearn.preprocessing import StandardScaler\n","from joblib import load\n","import tensorflow as tf\n","from tensorflow import keras\n","import pandas as pd"]},{"cell_type":"code","source":["df = pd.read_csv(\"drive/MyDrive/archive/NTU_Phishing.csv\")"],"metadata":{"id":"stIss8O2MpVI"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":256},"id":"CgccAYCCMpQG","executionInfo":{"status":"ok","timestamp":1717505351806,"user_tz":-420,"elapsed":34,"user":{"displayName":"Sang Đoàn Lê Thanh","userId":"02548149049428545472"}},"outputId":"d105c792-e4f6-4c71-e51e-b39acea3900f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   id  NumDots  SubdomainLevel  PathLevel  UrlLength  NumDash  \\\n","0   1        3               2          0         29        0   \n","1   2        1               0          1         28        1   \n","2   3        2               1          1         35        0   \n","3   4        2               1          1         75       10   \n","4   5        1               0          0         26        0   \n","\n","   NumDashInHostname  AtSymbol  TildeSymbol  NumUnderscore  ...  \\\n","0                  0         0            0              0  ...   \n","1                  0         0            0              0  ...   \n","2                  0         0            0              0  ...   \n","3                  0         0            0              0  ...   \n","4                  0         0            0              0  ...   \n","\n","   IframeOrFrame  MissingTitle  ImagesOnlyInForm  SubdomainLevelRT  \\\n","0              0             0                 0                 1   \n","1              0             0                 0                 0   \n","2              0             0                 0                 1   \n","3              1             0                 0                 1   \n","4              1             0                 0                 0   \n","\n","   UrlLengthRT  PctExtResourceUrlsRT  AbnormalExtFormActionR  \\\n","0            0                     0                       0   \n","1           -1                    -1                       0   \n","2            0                    -1                       0   \n","3           -1                    -1                       0   \n","4           -1                    -1                       0   \n","\n","   ExtMetaScriptLinkRT  PctExtNullSelfRedirectHyperlinksRT  CLASS_LABEL  \n","0                    0                                   0            0  \n","1                    0                                   0            0  \n","2                   -1                                   0            0  \n","3                   -1                                  -1            0  \n","4                   -1                                   1            0  \n","\n","[5 rows x 50 columns]"],"text/html":["\n","  <div id=\"df-46c9bb0d-0db5-4c66-8f28-5871bd4726e1\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>NumDots</th>\n","      <th>SubdomainLevel</th>\n","      <th>PathLevel</th>\n","      <th>UrlLength</th>\n","      <th>NumDash</th>\n","      <th>NumDashInHostname</th>\n","      <th>AtSymbol</th>\n","      <th>TildeSymbol</th>\n","      <th>NumUnderscore</th>\n","      <th>...</th>\n","      <th>IframeOrFrame</th>\n","      <th>MissingTitle</th>\n","      <th>ImagesOnlyInForm</th>\n","      <th>SubdomainLevelRT</th>\n","      <th>UrlLengthRT</th>\n","      <th>PctExtResourceUrlsRT</th>\n","      <th>AbnormalExtFormActionR</th>\n","      <th>ExtMetaScriptLinkRT</th>\n","      <th>PctExtNullSelfRedirectHyperlinksRT</th>\n","      <th>CLASS_LABEL</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>29</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>28</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>35</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>-1</td>\n","      <td>0</td>\n","      <td>-1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>75</td>\n","      <td>10</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>0</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>26</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>0</td>\n","      <td>-1</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 50 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-46c9bb0d-0db5-4c66-8f28-5871bd4726e1')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-46c9bb0d-0db5-4c66-8f28-5871bd4726e1 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-46c9bb0d-0db5-4c66-8f28-5871bd4726e1');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-803c0680-6f90-46f8-8dea-db4c3d67d059\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-803c0680-6f90-46f8-8dea-db4c3d67d059')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-803c0680-6f90-46f8-8dea-db4c3d67d059 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df"}},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["df.dtypes"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gGE2yMccMpH4","executionInfo":{"status":"ok","timestamp":1717505351806,"user_tz":-420,"elapsed":32,"user":{"displayName":"Sang Đoàn Lê Thanh","userId":"02548149049428545472"}},"outputId":"bc0a8de4-45d9-4445-9a95-e60765df1542"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["id                                      int64\n","NumDots                                 int64\n","SubdomainLevel                          int64\n","PathLevel                               int64\n","UrlLength                               int64\n","NumDash                                 int64\n","NumDashInHostname                       int64\n","AtSymbol                                int64\n","TildeSymbol                             int64\n","NumUnderscore                           int64\n","NumPercent                              int64\n","NumQueryComponents                      int64\n","NumAmpersand                            int64\n","NumHash                                 int64\n","NumNumericChars                         int64\n","NoHttps                                 int64\n","RandomString                            int64\n","IpAddress                               int64\n","DomainInSubdomains                      int64\n","DomainInPaths                           int64\n","HttpsInHostname                         int64\n","HostnameLength                          int64\n","PathLength                              int64\n","QueryLength                             int64\n","DoubleSlashInPath                       int64\n","NumSensitiveWords                       int64\n","EmbeddedBrandName                       int64\n","PctExtHyperlinks                      float64\n","PctExtResourceUrls                    float64\n","ExtFavicon                              int64\n","InsecureForms                           int64\n","RelativeFormAction                      int64\n","ExtFormAction                           int64\n","AbnormalFormAction                      int64\n","PctNullSelfRedirectHyperlinks         float64\n","FrequentDomainNameMismatch              int64\n","FakeLinkInStatusBar                     int64\n","RightClickDisabled                      int64\n","PopUpWindow                             int64\n","SubmitInfoToEmail                       int64\n","IframeOrFrame                           int64\n","MissingTitle                            int64\n","ImagesOnlyInForm                        int64\n","SubdomainLevelRT                        int64\n","UrlLengthRT                             int64\n","PctExtResourceUrlsRT                    int64\n","AbnormalExtFormActionR                  int64\n","ExtMetaScriptLinkRT                     int64\n","PctExtNullSelfRedirectHyperlinksRT      int64\n","CLASS_LABEL                             int64\n","dtype: object"]},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["df.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":350},"id":"hGLngRavMpFO","executionInfo":{"status":"ok","timestamp":1717505351807,"user_tz":-420,"elapsed":27,"user":{"displayName":"Sang Đoàn Lê Thanh","userId":"02548149049428545472"}},"outputId":"98e27354-850a-48be-f7c3-591eb208292d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["               id     NumDots  SubdomainLevel   PathLevel   UrlLength  \\\n","count  100.000000  100.000000      100.000000  100.000000  100.000000   \n","mean    50.500000    2.130000        0.460000    1.290000   47.850000   \n","std     29.011492    1.404574        0.716614    1.281532   27.285018   \n","min      1.000000    1.000000        0.000000    0.000000   17.000000   \n","25%     25.750000    1.000000        0.000000    0.000000   29.000000   \n","50%     50.500000    2.000000        0.000000    1.000000   44.000000   \n","75%     75.250000    2.000000        1.000000    2.000000   60.500000   \n","max    100.000000    7.000000        3.000000    5.000000  212.000000   \n","\n","          NumDash  NumDashInHostname  AtSymbol  TildeSymbol  NumUnderscore  \\\n","count  100.000000         100.000000     100.0        100.0     100.000000   \n","mean     1.690000           0.350000       0.0          0.0       0.080000   \n","std      2.592511           0.687184       0.0          0.0       0.338744   \n","min      0.000000           0.000000       0.0          0.0       0.000000   \n","25%      0.000000           0.000000       0.0          0.0       0.000000   \n","50%      1.000000           0.000000       0.0          0.0       0.000000   \n","75%      2.000000           1.000000       0.0          0.0       0.000000   \n","max     14.000000           3.000000       0.0          0.0       2.000000   \n","\n","       ...  IframeOrFrame  MissingTitle  ImagesOnlyInForm  SubdomainLevelRT  \\\n","count  ...     100.000000        100.00        100.000000        100.000000   \n","mean   ...       0.370000          0.01          0.020000          0.900000   \n","std    ...       0.485237          0.10          0.140705          0.333333   \n","min    ...       0.000000          0.00          0.000000         -1.000000   \n","25%    ...       0.000000          0.00          0.000000          1.000000   \n","50%    ...       0.000000          0.00          0.000000          1.000000   \n","75%    ...       1.000000          0.00          0.000000          1.000000   \n","max    ...       1.000000          1.00          1.000000          1.000000   \n","\n","       UrlLengthRT  PctExtResourceUrlsRT  AbnormalExtFormActionR  \\\n","count    100.00000            100.000000              100.000000   \n","mean      -0.12000              0.160000                0.550000   \n","std        0.80754              0.928994                0.657129   \n","min       -1.00000             -1.000000               -1.000000   \n","25%       -1.00000             -1.000000                0.000000   \n","50%        0.00000              1.000000                1.000000   \n","75%        1.00000              1.000000                1.000000   \n","max        1.00000              1.000000                1.000000   \n","\n","       ExtMetaScriptLinkRT  PctExtNullSelfRedirectHyperlinksRT  CLASS_LABEL  \n","count           100.000000                          100.000000   100.000000  \n","mean             -0.180000                            0.120000     0.500000  \n","std               0.770412                            0.913203     0.502519  \n","min              -1.000000                           -1.000000     0.000000  \n","25%              -1.000000                           -1.000000     0.000000  \n","50%               0.000000                            0.000000     0.500000  \n","75%               0.000000                            1.000000     1.000000  \n","max               1.000000                            1.000000     1.000000  \n","\n","[8 rows x 50 columns]"],"text/html":["\n","  <div id=\"df-678c17f8-193c-4836-91b8-60fa0a43ef12\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>NumDots</th>\n","      <th>SubdomainLevel</th>\n","      <th>PathLevel</th>\n","      <th>UrlLength</th>\n","      <th>NumDash</th>\n","      <th>NumDashInHostname</th>\n","      <th>AtSymbol</th>\n","      <th>TildeSymbol</th>\n","      <th>NumUnderscore</th>\n","      <th>...</th>\n","      <th>IframeOrFrame</th>\n","      <th>MissingTitle</th>\n","      <th>ImagesOnlyInForm</th>\n","      <th>SubdomainLevelRT</th>\n","      <th>UrlLengthRT</th>\n","      <th>PctExtResourceUrlsRT</th>\n","      <th>AbnormalExtFormActionR</th>\n","      <th>ExtMetaScriptLinkRT</th>\n","      <th>PctExtNullSelfRedirectHyperlinksRT</th>\n","      <th>CLASS_LABEL</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>100.000000</td>\n","      <td>100.000000</td>\n","      <td>100.000000</td>\n","      <td>100.000000</td>\n","      <td>100.000000</td>\n","      <td>100.000000</td>\n","      <td>100.000000</td>\n","      <td>100.0</td>\n","      <td>100.0</td>\n","      <td>100.000000</td>\n","      <td>...</td>\n","      <td>100.000000</td>\n","      <td>100.00</td>\n","      <td>100.000000</td>\n","      <td>100.000000</td>\n","      <td>100.00000</td>\n","      <td>100.000000</td>\n","      <td>100.000000</td>\n","      <td>100.000000</td>\n","      <td>100.000000</td>\n","      <td>100.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>50.500000</td>\n","      <td>2.130000</td>\n","      <td>0.460000</td>\n","      <td>1.290000</td>\n","      <td>47.850000</td>\n","      <td>1.690000</td>\n","      <td>0.350000</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.080000</td>\n","      <td>...</td>\n","      <td>0.370000</td>\n","      <td>0.01</td>\n","      <td>0.020000</td>\n","      <td>0.900000</td>\n","      <td>-0.12000</td>\n","      <td>0.160000</td>\n","      <td>0.550000</td>\n","      <td>-0.180000</td>\n","      <td>0.120000</td>\n","      <td>0.500000</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>29.011492</td>\n","      <td>1.404574</td>\n","      <td>0.716614</td>\n","      <td>1.281532</td>\n","      <td>27.285018</td>\n","      <td>2.592511</td>\n","      <td>0.687184</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.338744</td>\n","      <td>...</td>\n","      <td>0.485237</td>\n","      <td>0.10</td>\n","      <td>0.140705</td>\n","      <td>0.333333</td>\n","      <td>0.80754</td>\n","      <td>0.928994</td>\n","      <td>0.657129</td>\n","      <td>0.770412</td>\n","      <td>0.913203</td>\n","      <td>0.502519</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>17.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>...</td>\n","      <td>0.000000</td>\n","      <td>0.00</td>\n","      <td>0.000000</td>\n","      <td>-1.000000</td>\n","      <td>-1.00000</td>\n","      <td>-1.000000</td>\n","      <td>-1.000000</td>\n","      <td>-1.000000</td>\n","      <td>-1.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>25.750000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>29.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>...</td>\n","      <td>0.000000</td>\n","      <td>0.00</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>-1.00000</td>\n","      <td>-1.000000</td>\n","      <td>0.000000</td>\n","      <td>-1.000000</td>\n","      <td>-1.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>50.500000</td>\n","      <td>2.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>44.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>...</td>\n","      <td>0.000000</td>\n","      <td>0.00</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>0.00000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.500000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>75.250000</td>\n","      <td>2.000000</td>\n","      <td>1.000000</td>\n","      <td>2.000000</td>\n","      <td>60.500000</td>\n","      <td>2.000000</td>\n","      <td>1.000000</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>...</td>\n","      <td>1.000000</td>\n","      <td>0.00</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>1.00000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>100.000000</td>\n","      <td>7.000000</td>\n","      <td>3.000000</td>\n","      <td>5.000000</td>\n","      <td>212.000000</td>\n","      <td>14.000000</td>\n","      <td>3.000000</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>2.000000</td>\n","      <td>...</td>\n","      <td>1.000000</td>\n","      <td>1.00</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.00000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>8 rows × 50 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-678c17f8-193c-4836-91b8-60fa0a43ef12')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-678c17f8-193c-4836-91b8-60fa0a43ef12 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-678c17f8-193c-4836-91b8-60fa0a43ef12');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-33268ee6-4e52-45f4-b6af-c91f7f3f6575\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-33268ee6-4e52-45f4-b6af-c91f7f3f6575')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-33268ee6-4e52-45f4-b6af-c91f7f3f6575 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe"}},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["df.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RTqUDS69MpCL","executionInfo":{"status":"ok","timestamp":1717505352177,"user_tz":-420,"elapsed":396,"user":{"displayName":"Sang Đoàn Lê Thanh","userId":"02548149049428545472"}},"outputId":"e5991b64-6f3e-44ab-9e11-5032c39e3063"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(100, 50)"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"k3Ub6_YxM3tX","executionInfo":{"status":"ok","timestamp":1717505352179,"user_tz":-420,"elapsed":20,"user":{"displayName":"Sang Đoàn Lê Thanh","userId":"02548149049428545472"}},"outputId":"01fe7bc4-0576-430f-d396-e3f44b26a346"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 100 entries, 0 to 99\n","Data columns (total 50 columns):\n"," #   Column                              Non-Null Count  Dtype  \n","---  ------                              --------------  -----  \n"," 0   id                                  100 non-null    int64  \n"," 1   NumDots                             100 non-null    int64  \n"," 2   SubdomainLevel                      100 non-null    int64  \n"," 3   PathLevel                           100 non-null    int64  \n"," 4   UrlLength                           100 non-null    int64  \n"," 5   NumDash                             100 non-null    int64  \n"," 6   NumDashInHostname                   100 non-null    int64  \n"," 7   AtSymbol                            100 non-null    int64  \n"," 8   TildeSymbol                         100 non-null    int64  \n"," 9   NumUnderscore                       100 non-null    int64  \n"," 10  NumPercent                          100 non-null    int64  \n"," 11  NumQueryComponents                  100 non-null    int64  \n"," 12  NumAmpersand                        100 non-null    int64  \n"," 13  NumHash                             100 non-null    int64  \n"," 14  NumNumericChars                     100 non-null    int64  \n"," 15  NoHttps                             100 non-null    int64  \n"," 16  RandomString                        100 non-null    int64  \n"," 17  IpAddress                           100 non-null    int64  \n"," 18  DomainInSubdomains                  100 non-null    int64  \n"," 19  DomainInPaths                       100 non-null    int64  \n"," 20  HttpsInHostname                     100 non-null    int64  \n"," 21  HostnameLength                      100 non-null    int64  \n"," 22  PathLength                          100 non-null    int64  \n"," 23  QueryLength                         100 non-null    int64  \n"," 24  DoubleSlashInPath                   100 non-null    int64  \n"," 25  NumSensitiveWords                   100 non-null    int64  \n"," 26  EmbeddedBrandName                   100 non-null    int64  \n"," 27  PctExtHyperlinks                    100 non-null    float64\n"," 28  PctExtResourceUrls                  100 non-null    float64\n"," 29  ExtFavicon                          100 non-null    int64  \n"," 30  InsecureForms                       100 non-null    int64  \n"," 31  RelativeFormAction                  100 non-null    int64  \n"," 32  ExtFormAction                       100 non-null    int64  \n"," 33  AbnormalFormAction                  100 non-null    int64  \n"," 34  PctNullSelfRedirectHyperlinks       100 non-null    float64\n"," 35  FrequentDomainNameMismatch          100 non-null    int64  \n"," 36  FakeLinkInStatusBar                 100 non-null    int64  \n"," 37  RightClickDisabled                  100 non-null    int64  \n"," 38  PopUpWindow                         100 non-null    int64  \n"," 39  SubmitInfoToEmail                   100 non-null    int64  \n"," 40  IframeOrFrame                       100 non-null    int64  \n"," 41  MissingTitle                        100 non-null    int64  \n"," 42  ImagesOnlyInForm                    100 non-null    int64  \n"," 43  SubdomainLevelRT                    100 non-null    int64  \n"," 44  UrlLengthRT                         100 non-null    int64  \n"," 45  PctExtResourceUrlsRT                100 non-null    int64  \n"," 46  AbnormalExtFormActionR              100 non-null    int64  \n"," 47  ExtMetaScriptLinkRT                 100 non-null    int64  \n"," 48  PctExtNullSelfRedirectHyperlinksRT  100 non-null    int64  \n"," 49  CLASS_LABEL                         100 non-null    int64  \n","dtypes: float64(3), int64(47)\n","memory usage: 39.2 KB\n"]}]},{"cell_type":"code","source":["class_counts = df['CLASS_LABEL'].value_counts()\n","print(class_counts)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UGi5YvOvPl9Q","executionInfo":{"status":"ok","timestamp":1717505352179,"user_tz":-420,"elapsed":15,"user":{"displayName":"Sang Đoàn Lê Thanh","userId":"02548149049428545472"}},"outputId":"4b1c3720-1ea4-47d6-fa62-e5b9c9924862"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["CLASS_LABEL\n","0    50\n","1    50\n","Name: count, dtype: int64\n"]}]},{"cell_type":"code","source":["plt.figure(figsize=(8, 6)) #Tạo một hình vẽ mới với kích thước 8x6 inches\n","class_counts.plot(kind='bar', color='green') #Vẽ biểu đồ cột của số lượng mẫu trong mỗi nhóm (giá trị) của cột \"CLASS_LABEL\"\n","plt.title('Class Label Counts') #đặt tên cho biểu đồ\n","plt.xlabel('Class Label') #đặt nhãn cho trục x\n","plt.ylabel('Count') #đặt nhãn cho trục y"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":576},"id":"DvGTCUErPoB9","executionInfo":{"status":"ok","timestamp":1717505352609,"user_tz":-420,"elapsed":440,"user":{"displayName":"Sang Đoàn Lê Thanh","userId":"02548149049428545472"}},"outputId":"5c602256-f09b-4a86-cfa3-f8059471cf62"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Text(0, 0.5, 'Count')"]},"metadata":{},"execution_count":9},{"output_type":"display_data","data":{"text/plain":["<Figure size 800x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["X = df.drop(columns=['CLASS_LABEL', 'id', 'HttpsInHostname','PathLength','SubdomainLevelRT','RightClickDisabled','UrlLength','NoHttps','ExtFavicon','NumPercent','PopUpWindow','PctExtResourceUrlsRT','NumHash','SubdomainLevel','DoubleSlashInPath','PctExtResourceUrls','NumNumericChars','AtSymbol','FakeLinkInStatusBar','ImagesOnlyInForm']) #Tạo một DataFrame mới là X để loại bỏ các cột không cần thiết\n","y = df['CLASS_LABEL'] #Tạo một y chứa cột 'CLASS_LABEL', là biến mục tiêu cần dự đoán.\n","#X bây giờ chứa dữ liệu đầu vào sau khi loại bỏ cột không cần thiết.\n","scaler = StandardScaler() #Tạo một đối tượng StandardScaler để chuẩn hóa dữ liệu.\n","X = scaler.fit_transform(X) #Chuẩn hóa dữ liệu đầu vào X (đảm bảo rằng các đặc trưng sẽ có giá trị trung bình gần bằng 0 và độ lệch chuẩn gần bằng 1)"],"metadata":{"id":"rfVVzJNOPrRd"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["RandomForest"],"metadata":{"id":"hrfrcHACP4cm"}},{"cell_type":"code","source":["model = load(\"drive/MyDrive/archive/RF_model_1.joblib\")"],"metadata":{"id":"lem55JLGPuCt"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from sklearn.metrics import accuracy_score, classification_report, confusion_matrix\n","predictions = model.predict(X)\n","print(predictions)\n","# Dự đoán và đánh giá mô hình\n","accuracy = accuracy_score(y, predictions)\n","print(f'Accuracy: {accuracy * 100:.2f}%')\n","print(classification_report(y, predictions))\n","print(\"Confusion Matrix:\")\n","conf_matrix = confusion_matrix(y, predictions)\n","sns.heatmap(conf_matrix, annot=True, cmap='Purples')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":695},"id":"qRche_E3P3QQ","executionInfo":{"status":"ok","timestamp":1717505353562,"user_tz":-420,"elapsed":573,"user":{"displayName":"Sang Đoàn Lê Thanh","userId":"02548149049428545472"}},"outputId":"f6f42e3a-6551-4807-e51d-79c163aca321"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n"," 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 1 0 1 1 1\n"," 1 1 1 1 1 1 1 1 1 1 1 1 0 0 1 0 1 1 1 1 1 1 1 1 0 1]\n","Accuracy: 92.00%\n","              precision    recall  f1-score   support\n","\n","           0       0.86      1.00      0.93        50\n","           1       1.00      0.84      0.91        50\n","\n","    accuracy                           0.92       100\n","   macro avg       0.93      0.92      0.92       100\n","weighted avg       0.93      0.92      0.92       100\n","\n","Confusion Matrix:\n"]},{"output_type":"execute_result","data":{"text/plain":["<Axes: >"]},"metadata":{},"execution_count":12},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["DecisionTree"],"metadata":{"id":"Ze8UFQryP-7Q"}},{"cell_type":"code","source":["model = load(\"drive/MyDrive/archive/DT_model_1.joblib\")"],"metadata":{"id":"uDwYUgsaP7uF"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from sklearn.metrics import accuracy_score,classification_report\n","X_testDT = model.predict(X)\n","print(X_testDT)\n","score = accuracy_score(y, X_testDT)\n","print(f'Accuracy: {score * 100:.2f}%')\n","print(classification_report(y, X_testDT))\n","conf_matrix = confusion_matrix(y, X_testDT)\n","sns.heatmap(conf_matrix, annot=True, cmap='Oranges')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":678},"id":"nKzUdDArQAsI","executionInfo":{"status":"ok","timestamp":1717505354444,"user_tz":-420,"elapsed":555,"user":{"displayName":"Sang Đoàn Lê Thanh","userId":"02548149049428545472"}},"outputId":"63609c8c-3874-4646-efb8-c11b1e1e3cfc"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n"," 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 1 0 1 1 1\n"," 1 0 1 1 1 1 1 1 1 1 1 1 0 0 1 0 1 1 1 1 1 1 1 1 0 1]\n","Accuracy: 91.00%\n","              precision    recall  f1-score   support\n","\n","           0       0.85      1.00      0.92        50\n","           1       1.00      0.82      0.90        50\n","\n","    accuracy                           0.91       100\n","   macro avg       0.92      0.91      0.91       100\n","weighted avg       0.92      0.91      0.91       100\n","\n"]},{"output_type":"execute_result","data":{"text/plain":["<Axes: >"]},"metadata":{},"execution_count":14},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["model = load(\"drive/MyDrive/archive/Xgb_model_1.joblib\")"],"metadata":{"id":"TELN7fQLS35s"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Xgboots"],"metadata":{"id":"UM7f1ifGQEou"}},{"cell_type":"code","source":["import xgboost as xgb\n","from sklearn.metrics import classification_report\n","\n","X_test_xgb = model.predict(X)\n","print(X_test_xgb)\n","accuracyxgb = accuracy_score(y, X_test_xgb)\n","print(f'Accuracy: {accuracyxgb * 100:.2f}%')\n","report1 = classification_report(y, X_test_xgb)\n","print(\"Classification Report:\")\n","print(report1)\n","print(\"Confusion Matrix:\")\n","conf_matrix = confusion_matrix(y, X_test_xgb)\n","sns.heatmap(conf_matrix, annot=True, cmap='Blues')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":713},"id":"fCFfGiMsQFYG","executionInfo":{"status":"ok","timestamp":1717505355392,"user_tz":-420,"elapsed":536,"user":{"displayName":"Sang Đoàn Lê Thanh","userId":"02548149049428545472"}},"outputId":"9fa5716c-5a29-48c2-efb9-f3771ac1e7d2"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n"," 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 0 1 0 0 1 0\n"," 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 1 0 1]\n","Accuracy: 72.00%\n","Classification Report:\n","              precision    recall  f1-score   support\n","\n","           0       0.64      1.00      0.78        50\n","           1       1.00      0.44      0.61        50\n","\n","    accuracy                           0.72       100\n","   macro avg       0.82      0.72      0.70       100\n","weighted avg       0.82      0.72      0.70       100\n","\n","Confusion Matrix:\n"]},{"output_type":"execute_result","data":{"text/plain":["<Axes: >"]},"metadata":{},"execution_count":16},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"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\n"},"metadata":{}}]},{"cell_type":"code","source":["accuracies = [accuracy * 100, score * 100, accuracyxgb * 100]\n","models = ['Random Forest', 'Decision Tree', 'XGBoost']\n","\n","print(f'Accuracy (Random Forest): {accuracies[0]:.2f}%')\n","print(f'Accuracy (Decision Tree): {accuracies[1]:.2f}%')\n","print(f'Accuracy (XGBoost): {accuracies[2]:.2f}%')\n","\n","plt.figure(figsize=(10, 6))\n","plt.bar(models, accuracies, color=['yellow', 'green', 'red'])\n","plt.xlabel('Models')\n","plt.ylabel('Accuracy (%)')\n","plt.title('Comparison of Model Accuracies')\n","plt.ylim(0, 100)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":616},"id":"TRl148H_QHbV","executionInfo":{"status":"ok","timestamp":1717505355853,"user_tz":-420,"elapsed":480,"user":{"displayName":"Sang Đoàn Lê Thanh","userId":"02548149049428545472"}},"outputId":"33f4f72a-ba20-4041-ad21-c35e7ac69684"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy (Random Forest): 92.00%\n","Accuracy (Decision Tree): 91.00%\n","Accuracy (XGBoost): 72.00%\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]}]}